import { useState } from 'react';
import { useAuthRedux } from '@/hooks/useAuthRedux';
import { useAppDispatch, useAppSelector } from '@/store/hooks';
import { createOrganization, selectOrganizationsLoading, linkOrganization } from '@/store/slices/organizationsSlice';
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from '@/components/ui/dialog';
import {
  AlertDialog,
  AlertDialogAction,
  AlertDialogCancel,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle,
} from '@/components/ui/alert-dialog';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import Icon from '@/components/ui/icon';

interface CreateOrganizationDialogProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  onSuccess?: () => void;
}

export default function CreateOrganizationDialog({
  open,
  onOpenChange,
  onSuccess,
}: CreateOrganizationDialogProps) {
  const { user } = useAuthRedux();
  const dispatch = useAppDispatch();
  const loading = useAppSelector(selectOrganizationsLoading);

  const [formData, setFormData] = useState({
    name: '',
    inn: '',
    kpp: '',
    legal_address: '',
    actual_address: '',
    phone: '',
    email: '',
    first_user_phone: '',
  });

  const [existingOrg, setExistingOrg] = useState<any>(null);
  const [showConflictDialog, setShowConflictDialog] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    console.log('üì§ Submitting organization:', formData);
    
    try {
      const result = await dispatch(createOrganization(formData));
      
      console.log('üì• Organization creation result:', result);
      
      if (createOrganization.fulfilled.match(result)) {
        console.log('‚úÖ Organization created successfully');
        resetForm();
        onOpenChange(false);
        onSuccess?.();
      } else if (createOrganization.rejected.match(result)) {
        const error = result.payload as any;
        
        // –ï—Å–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (409)
        if (error?.existing_organization) {
          console.log('‚ö†Ô∏è Organization already exists:', error.existing_organization);
          setExistingOrg({
            ...error.existing_organization,
            already_linked: error.already_linked
          });
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º AlertDialog –ë–ï–ó –∑–∞–∫—Ä—ã—Ç–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞
          setShowConflictDialog(true);
        } else {
          console.error('‚ùå Organization creation failed:', result.error);
          alert(`–û—à–∏–±–∫–∞: ${error?.error || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é'}`);
        }
      }
    } catch (error) {
      console.error('‚ùå Exception during organization creation:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏');
    }
  };

  const handleLinkExisting = async () => {
    if (!existingOrg) return;
    
    try {
      const result = await dispatch(linkOrganization(existingOrg.id));
      
      if (linkOrganization.fulfilled.match(result)) {
        console.log('‚úÖ Linked to existing organization');
        resetForm();
        setShowConflictDialog(false);
        onOpenChange(false);
        onSuccess?.();
      } else {
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –≤ –ø–æ–¥—Ä—è–¥—á–∏–∫–∏');
      }
    } catch (error) {
      console.error('‚ùå Failed to link organization:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏');
    }
  };

  const resetForm = () => {
    setFormData({
      name: '',
      inn: '',
      kpp: '',
      legal_address: '',
      actual_address: '',
      phone: '',
      email: '',
      first_user_phone: '',
    });
    setExistingOrg(null);
  };

  return (
    <>
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="max-w-2xl max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle>
            {user?.role === 'admin' ? '–°–æ–∑–¥–∞—Ç—å –ø–æ–¥—Ä—è–¥–Ω—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é' : '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ø–æ–¥—Ä—è–¥—á–∏–∫–∞'}
          </DialogTitle>
          <DialogDescription>
            –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –ø–µ—Ä–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
          </DialogDescription>
        </DialogHeader>

        <form onSubmit={handleSubmit} className="space-y-5 py-4">
          <div className="space-y-4">
            <div>
              <Label htmlFor="name">
                –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ <span className="text-red-500">*</span>
              </Label>
              <Input
                id="name"
                value={formData.name}
                onChange={(e) => setFormData({ ...formData, name: e.target.value })}
                placeholder="–û–û–û –°—Ç—Ä–æ–π—Ç–µ—Ö"
                required
              />
            </div>

            <div>
              <Label htmlFor="inn">
                –ò–ù–ù <span className="text-red-500">*</span>
              </Label>
              <Input
                id="inn"
                value={formData.inn}
                onChange={(e) => setFormData({ ...formData, inn: e.target.value })}
                placeholder="7707123456"
                required
                maxLength={12}
              />
            </div>

            <div>
              <Label htmlFor="first_user_phone">
                –¢–µ–ª–µ—Ñ–æ–Ω –ø–µ—Ä–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ <span className="text-red-500">*</span>
              </Label>
              <Input
                id="first_user_phone"
                type="tel"
                value={formData.first_user_phone}
                onChange={(e) => setFormData({ ...formData, first_user_phone: e.target.value })}
                placeholder="+7 (999) 123-45-67"
                required
              />
              <p className="text-sm text-slate-500 mt-1.5">
                –ù–∞ —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ SMS —Å –∫–æ–¥–æ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
              </p>
            </div>
          </div>

          <div className="flex gap-3 pt-4">
            <Button type="submit" className="flex-1" disabled={loading}>
              {loading ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : (user?.role === 'admin' ? '–°–æ–∑–¥–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é' : '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ø–æ–¥—Ä—è–¥—á–∏–∫–∞')}
            </Button>
            <Button
              type="button"
              variant="outline"
              onClick={() => onOpenChange(false)}
              disabled={loading}
            >
              –û—Ç–º–µ–Ω–∞
            </Button>
          </div>
        </form>
      </DialogContent>
    </Dialog>

    <AlertDialog open={showConflictDialog} onOpenChange={setShowConflictDialog}>
      <AlertDialogContent>
        <AlertDialogHeader>
          <AlertDialogTitle>
            {existingOrg?.already_linked ? '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞' : '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'}
          </AlertDialogTitle>
          <AlertDialogDescription>
            {existingOrg?.already_linked ? (
              <>
                <p>–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è <strong>{existingOrg?.name}</strong> (–ò–ù–ù: {existingOrg?.inn}) —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –≤–∞—à —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ä—è–¥—á–∏–∫–æ–≤.</p>
                <div className="mt-3 p-3 bg-blue-50 rounded-lg border border-blue-200">
                  <p className="font-semibold text-slate-900">{existingOrg?.name}</p>
                  <p className="text-sm text-slate-600 mt-1">–ò–ù–ù: {existingOrg?.inn}</p>
                  {existingOrg?.legal_address && (
                    <p className="text-sm text-slate-600">–ê–¥—Ä–µ—Å: {existingOrg.legal_address}</p>
                  )}
                </div>
              </>
            ) : (
              <>
                –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Å –ò–ù–ù <strong>{existingOrg?.inn}</strong> —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ:
                <div className="mt-3 p-3 bg-slate-50 rounded-lg">
                  <p className="font-semibold text-slate-900">{existingOrg?.name}</p>
                  <p className="text-sm text-slate-600 mt-1">–ò–ù–ù: {existingOrg?.inn}</p>
                  {existingOrg?.legal_address && (
                    <p className="text-sm text-slate-600">–ê–¥—Ä–µ—Å: {existingOrg.legal_address}</p>
                  )}
                </div>
                <p className="mt-3">–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –≤ –≤–∞—à —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ä—è–¥—á–∏–∫–æ–≤?</p>
              </>
            )}
          </AlertDialogDescription>
        </AlertDialogHeader>
        <AlertDialogFooter>
          {existingOrg?.already_linked ? (
            <AlertDialogAction onClick={() => {
              setShowConflictDialog(false);
              setExistingOrg(null);
              onOpenChange(false);
            }}>
              –ü–æ–Ω—è—Ç–Ω–æ
            </AlertDialogAction>
          ) : (
            <>
              <AlertDialogCancel onClick={() => {
                setShowConflictDialog(false);
                setExistingOrg(null);
              }}>–û—Ç–º–µ–Ω–∞</AlertDialogCancel>
              <AlertDialogAction onClick={handleLinkExisting}>
                –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥—Ä—è–¥—á–∏–∫–∞
              </AlertDialogAction>
            </>
          )}
        </AlertDialogFooter>
      </AlertDialogContent>
    </AlertDialog>
    </>
  );
}