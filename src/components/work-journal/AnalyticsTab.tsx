import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';
import { cn } from '@/lib/utils';
import { PlanFactComparison } from '@/types/journal';

interface AnalyticsTabProps {
  workId: number;
}

const mockPlanFactData: PlanFactComparison[] = [
  {
    estimate_item_id: 1,
    category: '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã',
    name: '–ö–∏—Ä–ø–∏—á –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–∏–π',
    planned_quantity: 1000,
    actual_quantity: 950,
    planned_cost: 50000,
    actual_cost: 47500,
    deviation_percent: -5,
    deviation_amount: -2500,
    status: 'normal',
  },
  {
    estimate_item_id: 2,
    category: '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã',
    name: '–¶–µ–º–µ–Ω—Ç –ú500',
    planned_quantity: 500,
    actual_quantity: 580,
    planned_cost: 25000,
    actual_cost: 29000,
    deviation_percent: 16,
    deviation_amount: 4000,
    status: 'critical',
  },
  {
    estimate_item_id: 3,
    category: '–†–∞–±–æ—Ç–∞',
    name: '–ö–∏—Ä–ø–∏—á–Ω–∞—è –∫–ª–∞–¥–∫–∞',
    planned_quantity: 100,
    actual_quantity: 108,
    planned_cost: 200000,
    actual_cost: 216000,
    deviation_percent: 8,
    deviation_amount: 16000,
    status: 'warning',
  },
];

const mockSummary = {
  total_planned_budget: 275000,
  total_actual_cost: 292500,
  total_deviation: 17500,
  total_deviation_percent: 6.4,
  items_in_budget: 1,
  items_warning: 1,
  items_critical: 1,
};

export default function AnalyticsTab({ workId }: AnalyticsTabProps) {
  const getStatusLabel = (status: string) => {
    switch (status) {
      case 'normal': return 'üü¢ –í –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã';
      case 'warning': return '‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è';
      case 'critical': return '‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ';
      default: return status;
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'normal': return 'text-green-600 bg-green-50 border-green-200';
      case 'warning': return 'text-amber-600 bg-amber-50 border-amber-200';
      case 'critical': return 'text-red-600 bg-red-50 border-red-200';
      default: return 'text-slate-600 bg-slate-50 border-slate-200';
    }
  };

  return (
    <div className="flex-1 overflow-y-auto p-3 md:p-6 lg:p-8 bg-slate-50">
      <div className="max-w-7xl mx-auto">
        <div className="flex items-center justify-between mb-6">
          <h3 className="text-lg font-bold">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞: –ü–ª–∞–Ω vs –§–∞–∫—Ç</h3>
          <Button size="sm" variant="outline">
            <Icon name="Download" size={16} className="mr-2" />
            –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á—ë—Ç–∞
          </Button>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
          <Card>
            <CardContent className="p-4">
              <div className="flex items-center gap-3">
                <div className="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center">
                  <Icon name="Calculator" size={20} className="text-blue-600" />
                </div>
                <div>
                  <p className="text-xs text-slate-600">–ü–ª–∞–Ω–æ–≤—ã–π –±—é–¥–∂–µ—Ç</p>
                  <p className="text-lg font-bold">{mockSummary.total_planned_budget.toLocaleString('ru-RU')} ‚ÇΩ</p>
                </div>
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardContent className="p-4">
              <div className="flex items-center gap-3">
                <div className="w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center">
                  <Icon name="TrendingUp" size={20} className="text-purple-600" />
                </div>
                <div>
                  <p className="text-xs text-slate-600">–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã</p>
                  <p className="text-lg font-bold">{mockSummary.total_actual_cost.toLocaleString('ru-RU')} ‚ÇΩ</p>
                </div>
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardContent className="p-4">
              <div className="flex items-center gap-3">
                <div className={cn(
                  'w-10 h-10 rounded-lg flex items-center justify-center',
                  mockSummary.total_deviation >= 0 ? 'bg-red-100' : 'bg-green-100'
                )}>
                  <Icon 
                    name={mockSummary.total_deviation >= 0 ? 'TrendingDown' : 'TrendingUp'} 
                    size={20} 
                    className={mockSummary.total_deviation >= 0 ? 'text-red-600' : 'text-green-600'} 
                  />
                </div>
                <div>
                  <p className="text-xs text-slate-600">–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ</p>
                  <p className={cn(
                    'text-lg font-bold',
                    mockSummary.total_deviation >= 0 ? 'text-red-600' : 'text-green-600'
                  )}>
                    {mockSummary.total_deviation >= 0 ? '+' : ''}{mockSummary.total_deviation.toLocaleString('ru-RU')} ‚ÇΩ
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardContent className="p-4">
              <div className="flex items-center gap-3">
                <div className="w-10 h-10 bg-amber-100 rounded-lg flex items-center justify-center">
                  <Icon name="Percent" size={20} className="text-amber-600" />
                </div>
                <div>
                  <p className="text-xs text-slate-600">–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ, %</p>
                  <p className={cn(
                    'text-lg font-bold',
                    mockSummary.total_deviation_percent > 5 ? 'text-amber-600' : 'text-green-600'
                  )}>
                    {mockSummary.total_deviation_percent >= 0 ? '+' : ''}{mockSummary.total_deviation_percent.toFixed(1)}%
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        <div className="bg-white rounded-lg p-4 mb-6 border border-slate-200">
          <div className="flex items-center justify-between">
            <h4 className="font-semibold text-sm">–¶–≤–µ—Ç–æ–≤–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π:</h4>
            <div className="flex gap-4">
              <div className="flex items-center gap-2">
                <div className="w-3 h-3 bg-green-500 rounded-full"></div>
                <span className="text-xs text-slate-600">‚â§ 5% ‚Äî –Ω–æ—Ä–º–∞</span>
              </div>
              <div className="flex items-center gap-2">
                <div className="w-3 h-3 bg-amber-500 rounded-full"></div>
                <span className="text-xs text-slate-600">5‚Äì15% ‚Äî –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ</span>
              </div>
              <div className="flex items-center gap-2">
                <div className="w-3 h-3 bg-red-500 rounded-full"></div>
                <span className="text-xs text-slate-600">&gt; 15% ‚Äî –∫—Ä–∏—Ç–∏—á–Ω–æ</span>
              </div>
            </div>
          </div>
        </div>

        <Card>
          <CardHeader>
            <CardTitle className="text-base">–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –ø–æ–∑–∏—Ü–∏—è–º —Å–º–µ—Ç—ã</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="overflow-x-auto">
              <table className="w-full">
                <thead className="bg-slate-50 border-b border-slate-200">
                  <tr>
                    <th className="text-left p-3 text-xs font-semibold text-slate-700">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                    <th className="text-left p-3 text-xs font-semibold text-slate-700">–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ</th>
                    <th className="text-right p-3 text-xs font-semibold text-slate-700">–ü–ª–∞–Ω (–∫–æ–ª.)</th>
                    <th className="text-right p-3 text-xs font-semibold text-slate-700">–§–∞–∫—Ç (–∫–æ–ª.)</th>
                    <th className="text-right p-3 text-xs font-semibold text-slate-700">–ü–ª–∞–Ω (‚ÇΩ)</th>
                    <th className="text-right p-3 text-xs font-semibold text-slate-700">–§–∞–∫—Ç (‚ÇΩ)</th>
                    <th className="text-right p-3 text-xs font-semibold text-slate-700">–û—Ç–∫–ª. (%)</th>
                    <th className="text-left p-3 text-xs font-semibold text-slate-700">–°—Ç–∞—Ç—É—Å</th>
                  </tr>
                </thead>
                <tbody>
                  {mockPlanFactData.map((item) => (
                    <tr key={item.estimate_item_id} className="border-b border-slate-100 hover:bg-slate-50">
                      <td className="p-3">
                        <Badge variant="outline" className="text-xs">{item.category}</Badge>
                      </td>
                      <td className="p-3 text-sm">{item.name}</td>
                      <td className="p-3 text-sm text-right text-slate-600">{item.planned_quantity}</td>
                      <td className="p-3 text-sm text-right font-semibold">{item.actual_quantity}</td>
                      <td className="p-3 text-sm text-right text-slate-600">
                        {item.planned_cost.toLocaleString('ru-RU')}
                      </td>
                      <td className="p-3 text-sm text-right font-semibold">
                        {item.actual_cost.toLocaleString('ru-RU')}
                      </td>
                      <td className="p-3 text-sm text-right">
                        <span className={cn(
                          'font-semibold',
                          item.status === 'normal' && 'text-green-600',
                          item.status === 'warning' && 'text-amber-600',
                          item.status === 'critical' && 'text-red-600'
                        )}>
                          {item.deviation_percent >= 0 ? '+' : ''}{item.deviation_percent}%
                        </span>
                      </td>
                      <td className="p-3">
                        <Badge className={cn('text-xs border', getStatusColor(item.status))}>
                          {getStatusLabel(item.status)}
                        </Badge>
                      </td>
                    </tr>
                  ))}
                </tbody>
                <tfoot className="bg-slate-50 border-t-2 border-slate-300">
                  <tr>
                    <td colSpan={4} className="p-3 text-sm font-semibold">–ò—Ç–æ–≥–æ:</td>
                    <td className="p-3 text-sm font-semibold text-right">
                      {mockSummary.total_planned_budget.toLocaleString('ru-RU')} ‚ÇΩ
                    </td>
                    <td className="p-3 text-sm font-semibold text-right">
                      {mockSummary.total_actual_cost.toLocaleString('ru-RU')} ‚ÇΩ
                    </td>
                    <td className="p-3 text-sm font-semibold text-right">
                      <span className={cn(
                        mockSummary.total_deviation_percent <= 5 && 'text-green-600',
                        mockSummary.total_deviation_percent > 5 && mockSummary.total_deviation_percent <= 15 && 'text-amber-600',
                        mockSummary.total_deviation_percent > 15 && 'text-red-600'
                      )}>
                        {mockSummary.total_deviation_percent >= 0 ? '+' : ''}{mockSummary.total_deviation_percent.toFixed(1)}%
                      </span>
                    </td>
                    <td></td>
                  </tr>
                </tfoot>
              </table>
            </div>
          </CardContent>
        </Card>

        <div className="mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200">
          <p className="text-sm text-blue-900">
            üí° <strong>–ë—É–¥—É—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ (—è–Ω–≤–∞—Ä—å 2025):</strong> –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–µ, –æ–±—ä–µ–∫—Ç—É, –≤–∏–¥–∞–º —Ä–∞–±–æ—Ç, –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º. –≠–∫—Å–ø–æ—Ä—Ç –≤ PDF/XLSX.
          </p>
        </div>
      </div>
    </div>
  );
}